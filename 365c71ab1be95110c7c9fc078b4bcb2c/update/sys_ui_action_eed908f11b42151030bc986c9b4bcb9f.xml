<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>cmb_service_active</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>current.u_state == 'Designed' || current.u_state == 'Reserved' &amp;&amp; current.approval!='requested' &amp;&amp; current.isValidRecord() &amp;&amp; current.canWrite() </condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>true</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>true</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Activate</name>
        <onclick>validateActivation()</onclick>
        <order>-1200</order>
        <script><![CDATA[if(!current.u_acceptance_date){
	gs.addErrorMessage('Please provide a value for field Acceptance date before activating the service');
	action.setRedirectURL(current);

}else {
	current.update();
	

	try {	
		var gr = new GlideRecord('x_tsigh_cmb_u_cmdb_ci_cmb_service');
		if (gr.get(current.sys_id)) {
			var inputs = {};
			inputs['service'] = current;
			inputs['success_state'] = 'Active'; // String 
			inputs['rejection_state'] = 'Inactive'; // String 
			
			sn_fd.FlowAPI.getRunner().subflow('x_tsigh_cmb.cmb_service_initial_approval').inBackground().withInputs(inputs).run();
		}
	} catch (ex) {
		gs.info('Error: '+ex.toString());
	}
	action.setRedirectURL(current);
}






/*


function validateActivation(){
	var lbl = g_form.getValue('u_acceptance_date');
	if(lbl){
		sn_fd.FlowAPI.getRunner().subflow('x_tsigh_cmb.cmb_service_initial_approval').inBackground().withInputs(inputs).run();
		gsftSubmit(null, g_form.getFormElement(), 'cmb_service_active');

	}
	else g_form.addErrorMessage('Please provide a value for field Acceptance date before activating the service');
}


if (typeof window == 'undefined')
//	activateService();


/*function activateService() {
	try {	
		var gr = new GlideRecord('x_tsigh_cmb_u_cmdb_ci_cmb_service');
		if (gr.get(current.sys_id)) {
			var inputs = {};
			inputs['service'] = current;
			inputs['success_state'] = 'Active'; // String 
			inputs['rejection_state'] = 'Inactive'; // String 
			sn_fd.FlowAPI.getRunner().subflow('x_tsigh_cmb.cmb_service_initial_approval').inBackground().withInputs(inputs).run();
		}
	} catch (ex) {
		gs.info('Error: '+ex.toString());
	}

}*/

//}
/*
try {	
	var gr = new GlideRecord('x_tsigh_cmb_u_cmdb_ci_cmb_service');
	if (gr.get(current.sys_id)) {
		var inputs = {};
		inputs['service'] = gr;
		inputs['success_state'] = 'Active'; // String 
		inputs['rejection_state'] = 'Inactive'; // String 
		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		sn_fd.FlowAPI.getRunner().subflow('x_tsigh_cmb.cmb_service_initial_approval').inBackground().withInputs(inputs).run();
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		/*var result = sn_fd.FlowAPI.getRunner().subflow('x_tsigh_cmb.cmb_service_approval_with_task').inForeground().withInputs(inputs).run();
var outputs = result.getOutputs();*/
/*	}
} catch (ex) {
	gs.info('Error: '+ex.toString());
}
//current.update();
action.setRedirectURL(current);*/
]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>daniel.szabo</sys_created_by>
        <sys_created_on>2022-09-20 13:12:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>eed908f11b42151030bc986c9b4bcb9f</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>Activate</sys_name>
        <sys_overrides/>
        <sys_package display_value="CMB" source="x_tsigh_cmb">365c71ab1be95110c7c9fc078b4bcb2c</sys_package>
        <sys_policy/>
        <sys_scope display_value="CMB">365c71ab1be95110c7c9fc078b4bcb2c</sys_scope>
        <sys_update_name>sys_ui_action_eed908f11b42151030bc986c9b4bcb9f</sys_update_name>
        <sys_updated_by>daniel.szabo</sys_updated_by>
        <sys_updated_on>2022-10-28 06:49:29</sys_updated_on>
        <table>x_tsigh_cmb_u_cmdb_ci_cmb_service</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
